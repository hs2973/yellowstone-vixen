//! This code was AUTOGENERATED using the codama library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun codama to update it.
//!
//! <https://github.com/codama-idl/codama>
//!

use num_derive::FromPrimitive;
use thiserror::Error;

#[derive(Clone, Debug, Eq, Error, FromPrimitive, PartialEq)]
pub enum MplCoreProgramError {
    /// 0 - Invalid System Program
    #[error("Invalid System Program")]
    InvalidSystemProgram = 0x0,
    /// 1 - Error deserializing account
    #[error("Error deserializing account")]
    DeserializationError = 0x1,
    /// 2 - Error serializing account
    #[error("Error serializing account")]
    SerializationError = 0x2,
    /// 3 - Plugins not initialized
    #[error("Plugins not initialized")]
    PluginsNotInitialized = 0x3,
    /// 4 - Plugin not found
    #[error("Plugin not found")]
    PluginNotFound = 0x4,
    /// 5 - Numerical Overflow
    #[error("Numerical Overflow")]
    NumericalOverflow = 0x5,
    /// 6 - Incorrect account
    #[error("Incorrect account")]
    IncorrectAccount = 0x6,
    /// 7 - Incorrect asset hash
    #[error("Incorrect asset hash")]
    IncorrectAssetHash = 0x7,
    /// 8 - Invalid Plugin
    #[error("Invalid Plugin")]
    InvalidPlugin = 0x8,
    /// 9 - Invalid Authority
    #[error("Invalid Authority")]
    InvalidAuthority = 0x9,
    /// 10 - Cannot transfer a frozen asset
    #[error("Cannot transfer a frozen asset")]
    AssetIsFrozen = 0xa,
    /// 11 - Missing compression proof
    #[error("Missing compression proof")]
    MissingCompressionProof = 0xb,
    /// 12 - Cannot migrate a master edition used for prints
    #[error("Cannot migrate a master edition used for prints")]
    CannotMigrateMasterWithSupply = 0xc,
    /// 13 - Cannot migrate a print edition
    #[error("Cannot migrate a print edition")]
    CannotMigratePrints = 0xd,
    /// 14 - Cannot burn a collection NFT
    #[error("Cannot burn a collection NFT")]
    CannotBurnCollection = 0xe,
    /// 15 - Plugin already exists
    #[error("Plugin already exists")]
    PluginAlreadyExists = 0xf,
    /// 16 - Numerical overflow
    #[error("Numerical overflow")]
    NumericalOverflowError = 0x10,
    /// 17 - Already compressed account
    #[error("Already compressed account")]
    AlreadyCompressed = 0x11,
    /// 18 - Already decompressed account
    #[error("Already decompressed account")]
    AlreadyDecompressed = 0x12,
    /// 19 - Invalid Collection passed in
    #[error("Invalid Collection passed in")]
    InvalidCollection = 0x13,
    /// 20 - Missing update authority
    #[error("Missing update authority")]
    MissingUpdateAuthority = 0x14,
    /// 21 - Missing new owner
    #[error("Missing new owner")]
    MissingNewOwner = 0x15,
    /// 22 - Missing system program
    #[error("Missing system program")]
    MissingSystemProgram = 0x16,
    /// 23 - Feature not available
    #[error("Feature not available")]
    NotAvailable = 0x17,
    /// 24 - Invalid Asset passed in
    #[error("Invalid Asset passed in")]
    InvalidAsset = 0x18,
    /// 25 - Missing collection
    #[error("Missing collection")]
    MissingCollection = 0x19,
    /// 26 - Neither the asset or any plugins have approved this operation
    #[error("Neither the asset or any plugins have approved this operation")]
    NoApprovals = 0x1a,
    /// 27 - Plugin Manager cannot redelegate a delegated plugin without revoking first
    #[error("Plugin Manager cannot redelegate a delegated plugin without revoking first")]
    CannotRedelegate = 0x1b,
    /// 28 - Invalid setting for plugin
    #[error("Invalid setting for plugin")]
    InvalidPluginSetting = 0x1c,
    /// 29 - Cannot specify both an update authority and collection on an asset
    #[error("Cannot specify both an update authority and collection on an asset")]
    ConflictingAuthority = 0x1d,
    /// 30 - Invalid Log Wrapper Program
    #[error("Invalid Log Wrapper Program")]
    InvalidLogWrapperProgram = 0x1e,
    /// 31 - External Plugin Adapter not found
    #[error("External Plugin Adapter not found")]
    ExternalPluginAdapterNotFound = 0x1f,
    /// 32 - External Plugin Adapter already exists
    #[error("External Plugin Adapter already exists")]
    ExternalPluginAdapterAlreadyExists = 0x20,
    /// 33 - Missing asset needed for extra account PDA derivation
    #[error("Missing asset needed for extra account PDA derivation")]
    MissingAsset = 0x21,
    /// 34 - Missing account needed for external plugin adapter
    #[error("Missing account needed for external plugin adapter")]
    MissingExternalPluginAdapterAccount = 0x22,
    /// 35 - Oracle external plugin adapter can only be configured to reject
    #[error("Oracle external plugin adapter can only be configured to reject")]
    OracleCanRejectOnly = 0x23,
    /// 36 - External plugin adapter must have at least one lifecycle check
    #[error("External plugin adapter must have at least one lifecycle check")]
    RequiresLifecycleCheck = 0x24,
    /// 37 - Duplicate lifecycle checks were provided for external plugin adapter
    #[error("Duplicate lifecycle checks were provided for external plugin adapter ")]
    DuplicateLifecycleChecks = 0x25,
    /// 38 - Could not read from oracle account
    #[error("Could not read from oracle account")]
    InvalidOracleAccountData = 0x26,
    /// 39 - Oracle account is uninitialized
    #[error("Oracle account is uninitialized")]
    UninitializedOracleAccount = 0x27,
    /// 40 - Missing required signer for operation
    #[error("Missing required signer for operation")]
    MissingSigner = 0x28,
    /// 41 - Invalid plugin operation
    #[error("Invalid plugin operation")]
    InvalidPluginOperation = 0x29,
    /// 42 - Collection must be empty to be burned
    #[error("Collection must be empty to be burned")]
    CollectionMustBeEmpty = 0x2a,
    /// 43 - Two data sources provided, only one is allowed
    #[error("Two data sources provided, only one is allowed")]
    TwoDataSources = 0x2b,
    /// 44 - External Plugin does not support this operation
    #[error("External Plugin does not support this operation")]
    UnsupportedOperation = 0x2c,
    /// 45 - No data sources provided, one is required
    #[error("No data sources provided, one is required")]
    NoDataSources = 0x2d,
    /// 46 - This plugin adapter cannot be added to an Asset
    #[error("This plugin adapter cannot be added to an Asset")]
    InvalidPluginAdapterTarget = 0x2e,
    /// 47 - Cannot add a Data Section without a linked external plugin
    #[error("Cannot add a Data Section without a linked external plugin")]
    CannotAddDataSection = 0x2f,
    /// 48 - Cannot move asset to collection with permanent delegates
    #[error("Cannot move asset to collection with permanent delegates")]
    PermanentDelegatesPreventMove = 0x30,
    /// 49 - Invalid Signing PDA for Asset or Collection Execute
    #[error("Invalid Signing PDA for Asset or Collection Execute")]
    InvalidExecutePda = 0x31,
}

impl solana_program::program_error::PrintProgramError for MplCoreProgramError {
    fn print<E>(&self) {
        solana_program::msg!(&self.to_string());
    }
}

impl<T> solana_program::decode_error::DecodeError<T> for MplCoreProgramError {
    fn type_of() -> &'static str { "MplCoreProgramError" }
}
