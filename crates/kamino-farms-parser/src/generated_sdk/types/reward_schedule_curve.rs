//! This code was AUTOGENERATED using the codama library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun codama to update it.
//!
//! <https://github.com/codama-idl/codama>
//!

use borsh::{BorshDeserialize, BorshSerialize};

use crate::generated::types::RewardPerTimeUnitPoint;

#[derive(BorshSerialize, BorshDeserialize, Clone, Debug, Eq, PartialEq)]
#[cfg_attr(feature = "serde", derive(serde::Serialize, serde::Deserialize))]
pub struct RewardScheduleCurve {
    /// This is a stepwise function, meaning that each point represents
    /// how many rewards are issued per time unit since the beginning
    /// of that point until the beginning of the next point.
    /// This is not a linear curve, there is no interpolation going on.
    /// A curve can be [[t0, 100], [t1, 50], [t2, 0]]
    /// meaning that from t0 to t1, 100 rewards are issued per time unit,
    /// from t1 to t2, 50 rewards are issued per time unit, and after t2 it stops
    /// Another curve, can be [[t0, 100], [u64::max, 0]]
    /// meaning that from t0 to u64::max, 100 rewards are issued per time unit
    pub points: [RewardPerTimeUnitPoint; 20],
}
