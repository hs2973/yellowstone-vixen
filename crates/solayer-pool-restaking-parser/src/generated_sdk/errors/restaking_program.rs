//! This code was AUTOGENERATED using the codama library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun codama to update it.
//!
//! <https://github.com/codama-idl/codama>
//!

use num_derive::FromPrimitive;
use thiserror::Error;

#[derive(Clone, Debug, Eq, Error, FromPrimitive, PartialEq)]
pub enum RestakingProgramError {
    /// 6000 - Unsupported Staking Asset
    #[error("Unsupported Staking Asset")]
    UnsupportedStakingAsset = 0x1770,
    /// 6001 - The RST mint supply must be zero during initialization
    #[error("The RST mint supply must be zero during initialization")]
    NonZeroRstMintSupply = 0x1771,
    /// 6002 - This mint is not in the list of liquid mints
    #[error("This mint is not in the list of liquid mints")]
    NonLiquidMint = 0x1772,
    /// 6003 - This mint does not match what is expected
    #[error("This mint does not match what is expected")]
    MintMismatch = 0x1773,
}

impl solana_program::program_error::PrintProgramError for RestakingProgramError {
    fn print<E>(&self) {
        solana_program::msg!(&self.to_string());
    }
}

impl<T> solana_program::decode_error::DecodeError<T> for RestakingProgramError {
    fn type_of() -> &'static str { "RestakingProgramError" }
}
