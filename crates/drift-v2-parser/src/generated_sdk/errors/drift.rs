//! This code was AUTOGENERATED using the codama library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun codama to update it.
//!
//! <https://github.com/codama-idl/codama>
//!

use num_derive::FromPrimitive;
use thiserror::Error;

#[derive(Clone, Debug, Eq, Error, FromPrimitive, PartialEq)]
pub enum DriftError {
    /// 6000 - Invalid Spot Market Authority
    #[error("Invalid Spot Market Authority")]
    InvalidSpotMarketAuthority = 0x1770,
    /// 6001 - Clearing house not insurance fund authority
    #[error("Clearing house not insurance fund authority")]
    InvalidInsuranceFundAuthority = 0x1771,
    /// 6002 - Insufficient deposit
    #[error("Insufficient deposit")]
    InsufficientDeposit = 0x1772,
    /// 6003 - Insufficient collateral
    #[error("Insufficient collateral")]
    InsufficientCollateral = 0x1773,
    /// 6004 - Sufficient collateral
    #[error("Sufficient collateral")]
    SufficientCollateral = 0x1774,
    /// 6005 - Max number of positions taken
    #[error("Max number of positions taken")]
    MaxNumberOfPositions = 0x1775,
    /// 6006 - Admin Controls Prices Disabled
    #[error("Admin Controls Prices Disabled")]
    AdminControlsPricesDisabled = 0x1776,
    /// 6007 - Market Delisted
    #[error("Market Delisted")]
    MarketDelisted = 0x1777,
    /// 6008 - Market Index Already Initialized
    #[error("Market Index Already Initialized")]
    MarketIndexAlreadyInitialized = 0x1778,
    /// 6009 - User Account And User Positions Account Mismatch
    #[error("User Account And User Positions Account Mismatch")]
    UserAccountAndUserPositionsAccountMismatch = 0x1779,
    /// 6010 - User Has No Position In Market
    #[error("User Has No Position In Market")]
    UserHasNoPositionInMarket = 0x177a,
    /// 6011 - Invalid Initial Peg
    #[error("Invalid Initial Peg")]
    InvalidInitialPeg = 0x177b,
    /// 6012 - AMM repeg already configured with amt given
    #[error("AMM repeg already configured with amt given")]
    InvalidRepegRedundant = 0x177c,
    /// 6013 - AMM repeg incorrect repeg direction
    #[error("AMM repeg incorrect repeg direction")]
    InvalidRepegDirection = 0x177d,
    /// 6014 - AMM repeg out of bounds pnl
    #[error("AMM repeg out of bounds pnl")]
    InvalidRepegProfitability = 0x177e,
    /// 6015 - Slippage Outside Limit Price
    #[error("Slippage Outside Limit Price")]
    SlippageOutsideLimit = 0x177f,
    /// 6016 - Order Size Too Small
    #[error("Order Size Too Small")]
    OrderSizeTooSmall = 0x1780,
    /// 6017 - Price change too large when updating K
    #[error("Price change too large when updating K")]
    InvalidUpdateK = 0x1781,
    /// 6018 - Admin tried to withdraw amount larger than fees collected
    #[error("Admin tried to withdraw amount larger than fees collected")]
    AdminWithdrawTooLarge = 0x1782,
    /// 6019 - Math Error
    #[error("Math Error")]
    MathError = 0x1783,
    /// 6020 - Conversion to u128/u64 failed with an overflow or underflow
    #[error("Conversion to u128/u64 failed with an overflow or underflow")]
    BnConversionError = 0x1784,
    /// 6021 - Clock unavailable
    #[error("Clock unavailable")]
    ClockUnavailable = 0x1785,
    /// 6022 - Unable To Load Oracles
    #[error("Unable To Load Oracles")]
    UnableToLoadOracle = 0x1786,
    /// 6023 - Price Bands Breached
    #[error("Price Bands Breached")]
    PriceBandsBreached = 0x1787,
    /// 6024 - Exchange is paused
    #[error("Exchange is paused")]
    ExchangePaused = 0x1788,
    /// 6025 - Invalid whitelist token
    #[error("Invalid whitelist token")]
    InvalidWhitelistToken = 0x1789,
    /// 6026 - Whitelist token not found
    #[error("Whitelist token not found")]
    WhitelistTokenNotFound = 0x178a,
    /// 6027 - Invalid discount token
    #[error("Invalid discount token")]
    InvalidDiscountToken = 0x178b,
    /// 6028 - Discount token not found
    #[error("Discount token not found")]
    DiscountTokenNotFound = 0x178c,
    /// 6029 - Referrer not found
    #[error("Referrer not found")]
    ReferrerNotFound = 0x178d,
    /// 6030 - ReferrerNotFound
    #[error("ReferrerNotFound")]
    ReferrerStatsNotFound = 0x178e,
    /// 6031 - ReferrerMustBeWritable
    #[error("ReferrerMustBeWritable")]
    ReferrerMustBeWritable = 0x178f,
    /// 6032 - ReferrerMustBeWritable
    #[error("ReferrerMustBeWritable")]
    ReferrerStatsMustBeWritable = 0x1790,
    /// 6033 - ReferrerAndReferrerStatsAuthorityUnequal
    #[error("ReferrerAndReferrerStatsAuthorityUnequal")]
    ReferrerAndReferrerStatsAuthorityUnequal = 0x1791,
    /// 6034 - InvalidReferrer
    #[error("InvalidReferrer")]
    InvalidReferrer = 0x1792,
    /// 6035 - InvalidOracle
    #[error("InvalidOracle")]
    InvalidOracle = 0x1793,
    /// 6036 - OracleNotFound
    #[error("OracleNotFound")]
    OracleNotFound = 0x1794,
    /// 6037 - Liquidations Blocked By Oracle
    #[error("Liquidations Blocked By Oracle")]
    LiquidationsBlockedByOracle = 0x1795,
    /// 6038 - Can not deposit more than max deposit
    #[error("Can not deposit more than max deposit")]
    MaxDeposit = 0x1796,
    /// 6039 - Can not delete user that still has collateral
    #[error("Can not delete user that still has collateral")]
    CantDeleteUserWithCollateral = 0x1797,
    /// 6040 - AMM funding out of bounds pnl
    #[error("AMM funding out of bounds pnl")]
    InvalidFundingProfitability = 0x1798,
    /// 6041 - Casting Failure
    #[error("Casting Failure")]
    CastingFailure = 0x1799,
    /// 6042 - InvalidOrder
    #[error("InvalidOrder")]
    InvalidOrder = 0x179a,
    /// 6043 - InvalidOrderMaxTs
    #[error("InvalidOrderMaxTs")]
    InvalidOrderMaxTs = 0x179b,
    /// 6044 - InvalidOrderMarketType
    #[error("InvalidOrderMarketType")]
    InvalidOrderMarketType = 0x179c,
    /// 6045 - InvalidOrderForInitialMarginReq
    #[error("InvalidOrderForInitialMarginReq")]
    InvalidOrderForInitialMarginReq = 0x179d,
    /// 6046 - InvalidOrderNotRiskReducing
    #[error("InvalidOrderNotRiskReducing")]
    InvalidOrderNotRiskReducing = 0x179e,
    /// 6047 - InvalidOrderSizeTooSmall
    #[error("InvalidOrderSizeTooSmall")]
    InvalidOrderSizeTooSmall = 0x179f,
    /// 6048 - InvalidOrderNotStepSizeMultiple
    #[error("InvalidOrderNotStepSizeMultiple")]
    InvalidOrderNotStepSizeMultiple = 0x17a0,
    /// 6049 - InvalidOrderBaseQuoteAsset
    #[error("InvalidOrderBaseQuoteAsset")]
    InvalidOrderBaseQuoteAsset = 0x17a1,
    /// 6050 - InvalidOrderIOC
    #[error("InvalidOrderIOC")]
    InvalidOrderIOC = 0x17a2,
    /// 6051 - InvalidOrderPostOnly
    #[error("InvalidOrderPostOnly")]
    InvalidOrderPostOnly = 0x17a3,
    /// 6052 - InvalidOrderIOCPostOnly
    #[error("InvalidOrderIOCPostOnly")]
    InvalidOrderIOCPostOnly = 0x17a4,
    /// 6053 - InvalidOrderTrigger
    #[error("InvalidOrderTrigger")]
    InvalidOrderTrigger = 0x17a5,
    /// 6054 - InvalidOrderAuction
    #[error("InvalidOrderAuction")]
    InvalidOrderAuction = 0x17a6,
    /// 6055 - InvalidOrderOracleOffset
    #[error("InvalidOrderOracleOffset")]
    InvalidOrderOracleOffset = 0x17a7,
    /// 6056 - InvalidOrderMinOrderSize
    #[error("InvalidOrderMinOrderSize")]
    InvalidOrderMinOrderSize = 0x17a8,
    /// 6057 - Failed to Place Post-Only Limit Order
    #[error("Failed to Place Post-Only Limit Order")]
    PlacePostOnlyLimitFailure = 0x17a9,
    /// 6058 - User has no order
    #[error("User has no order")]
    UserHasNoOrder = 0x17aa,
    /// 6059 - Order Amount Too Small
    #[error("Order Amount Too Small")]
    OrderAmountTooSmall = 0x17ab,
    /// 6060 - Max number of orders taken
    #[error("Max number of orders taken")]
    MaxNumberOfOrders = 0x17ac,
    /// 6061 - Order does not exist
    #[error("Order does not exist")]
    OrderDoesNotExist = 0x17ad,
    /// 6062 - Order not open
    #[error("Order not open")]
    OrderNotOpen = 0x17ae,
    /// 6063 - FillOrderDidNotUpdateState
    #[error("FillOrderDidNotUpdateState")]
    FillOrderDidNotUpdateState = 0x17af,
    /// 6064 - Reduce only order increased risk
    #[error("Reduce only order increased risk")]
    ReduceOnlyOrderIncreasedRisk = 0x17b0,
    /// 6065 - Unable to load AccountLoader
    #[error("Unable to load AccountLoader")]
    UnableToLoadAccountLoader = 0x17b1,
    /// 6066 - Trade Size Too Large
    #[error("Trade Size Too Large")]
    TradeSizeTooLarge = 0x17b2,
    /// 6067 - User cant refer themselves
    #[error("User cant refer themselves")]
    UserCantReferThemselves = 0x17b3,
    /// 6068 - Did not receive expected referrer
    #[error("Did not receive expected referrer")]
    DidNotReceiveExpectedReferrer = 0x17b4,
    /// 6069 - Could not deserialize referrer
    #[error("Could not deserialize referrer")]
    CouldNotDeserializeReferrer = 0x17b5,
    /// 6070 - Could not deserialize referrer stats
    #[error("Could not deserialize referrer stats")]
    CouldNotDeserializeReferrerStats = 0x17b6,
    /// 6071 - User Order Id Already In Use
    #[error("User Order Id Already In Use")]
    UserOrderIdAlreadyInUse = 0x17b7,
    /// 6072 - No positions liquidatable
    #[error("No positions liquidatable")]
    NoPositionsLiquidatable = 0x17b8,
    /// 6073 - Invalid Margin Ratio
    #[error("Invalid Margin Ratio")]
    InvalidMarginRatio = 0x17b9,
    /// 6074 - Cant Cancel Post Only Order
    #[error("Cant Cancel Post Only Order")]
    CantCancelPostOnlyOrder = 0x17ba,
    /// 6075 - InvalidOracleOffset
    #[error("InvalidOracleOffset")]
    InvalidOracleOffset = 0x17bb,
    /// 6076 - CantExpireOrders
    #[error("CantExpireOrders")]
    CantExpireOrders = 0x17bc,
    /// 6077 - CouldNotLoadMarketData
    #[error("CouldNotLoadMarketData")]
    CouldNotLoadMarketData = 0x17bd,
    /// 6078 - PerpMarketNotFound
    #[error("PerpMarketNotFound")]
    PerpMarketNotFound = 0x17be,
    /// 6079 - InvalidMarketAccount
    #[error("InvalidMarketAccount")]
    InvalidMarketAccount = 0x17bf,
    /// 6080 - UnableToLoadMarketAccount
    #[error("UnableToLoadMarketAccount")]
    UnableToLoadPerpMarketAccount = 0x17c0,
    /// 6081 - MarketWrongMutability
    #[error("MarketWrongMutability")]
    MarketWrongMutability = 0x17c1,
    /// 6082 - UnableToCastUnixTime
    #[error("UnableToCastUnixTime")]
    UnableToCastUnixTime = 0x17c2,
    /// 6083 - CouldNotFindSpotPosition
    #[error("CouldNotFindSpotPosition")]
    CouldNotFindSpotPosition = 0x17c3,
    /// 6084 - NoSpotPositionAvailable
    #[error("NoSpotPositionAvailable")]
    NoSpotPositionAvailable = 0x17c4,
    /// 6085 - InvalidSpotMarketInitialization
    #[error("InvalidSpotMarketInitialization")]
    InvalidSpotMarketInitialization = 0x17c5,
    /// 6086 - CouldNotLoadSpotMarketData
    #[error("CouldNotLoadSpotMarketData")]
    CouldNotLoadSpotMarketData = 0x17c6,
    /// 6087 - SpotMarketNotFound
    #[error("SpotMarketNotFound")]
    SpotMarketNotFound = 0x17c7,
    /// 6088 - InvalidSpotMarketAccount
    #[error("InvalidSpotMarketAccount")]
    InvalidSpotMarketAccount = 0x17c8,
    /// 6089 - UnableToLoadSpotMarketAccount
    #[error("UnableToLoadSpotMarketAccount")]
    UnableToLoadSpotMarketAccount = 0x17c9,
    /// 6090 - SpotMarketWrongMutability
    #[error("SpotMarketWrongMutability")]
    SpotMarketWrongMutability = 0x17ca,
    /// 6091 - SpotInterestNotUpToDate
    #[error("SpotInterestNotUpToDate")]
    SpotMarketInterestNotUpToDate = 0x17cb,
    /// 6092 - SpotMarketInsufficientDeposits
    #[error("SpotMarketInsufficientDeposits")]
    SpotMarketInsufficientDeposits = 0x17cc,
    /// 6093 - UserMustSettleTheirOwnPositiveUnsettledPNL
    #[error("UserMustSettleTheirOwnPositiveUnsettledPNL")]
    UserMustSettleTheirOwnPositiveUnsettledPNL = 0x17cd,
    /// 6094 - CantUpdatePoolBalanceType
    #[error("CantUpdatePoolBalanceType")]
    CantUpdatePoolBalanceType = 0x17ce,
    /// 6095 - InsufficientCollateralForSettlingPNL
    #[error("InsufficientCollateralForSettlingPNL")]
    InsufficientCollateralForSettlingPNL = 0x17cf,
    /// 6096 - AMMNotUpdatedInSameSlot
    #[error("AMMNotUpdatedInSameSlot")]
    AMMNotUpdatedInSameSlot = 0x17d0,
    /// 6097 - AuctionNotComplete
    #[error("AuctionNotComplete")]
    AuctionNotComplete = 0x17d1,
    /// 6098 - MakerNotFound
    #[error("MakerNotFound")]
    MakerNotFound = 0x17d2,
    /// 6099 - MakerNotFound
    #[error("MakerNotFound")]
    MakerStatsNotFound = 0x17d3,
    /// 6100 - MakerMustBeWritable
    #[error("MakerMustBeWritable")]
    MakerMustBeWritable = 0x17d4,
    /// 6101 - MakerMustBeWritable
    #[error("MakerMustBeWritable")]
    MakerStatsMustBeWritable = 0x17d5,
    /// 6102 - MakerOrderNotFound
    #[error("MakerOrderNotFound")]
    MakerOrderNotFound = 0x17d6,
    /// 6103 - CouldNotDeserializeMaker
    #[error("CouldNotDeserializeMaker")]
    CouldNotDeserializeMaker = 0x17d7,
    /// 6104 - CouldNotDeserializeMaker
    #[error("CouldNotDeserializeMaker")]
    CouldNotDeserializeMakerStats = 0x17d8,
    /// 6105 - AuctionPriceDoesNotSatisfyMaker
    #[error("AuctionPriceDoesNotSatisfyMaker")]
    AuctionPriceDoesNotSatisfyMaker = 0x17d9,
    /// 6106 - MakerCantFulfillOwnOrder
    #[error("MakerCantFulfillOwnOrder")]
    MakerCantFulfillOwnOrder = 0x17da,
    /// 6107 - MakerOrderMustBePostOnly
    #[error("MakerOrderMustBePostOnly")]
    MakerOrderMustBePostOnly = 0x17db,
    /// 6108 - CantMatchTwoPostOnlys
    #[error("CantMatchTwoPostOnlys")]
    CantMatchTwoPostOnlys = 0x17dc,
    /// 6109 - OrderBreachesOraclePriceLimits
    #[error("OrderBreachesOraclePriceLimits")]
    OrderBreachesOraclePriceLimits = 0x17dd,
    /// 6110 - OrderMustBeTriggeredFirst
    #[error("OrderMustBeTriggeredFirst")]
    OrderMustBeTriggeredFirst = 0x17de,
    /// 6111 - OrderNotTriggerable
    #[error("OrderNotTriggerable")]
    OrderNotTriggerable = 0x17df,
    /// 6112 - OrderDidNotSatisfyTriggerCondition
    #[error("OrderDidNotSatisfyTriggerCondition")]
    OrderDidNotSatisfyTriggerCondition = 0x17e0,
    /// 6113 - PositionAlreadyBeingLiquidated
    #[error("PositionAlreadyBeingLiquidated")]
    PositionAlreadyBeingLiquidated = 0x17e1,
    /// 6114 - PositionDoesntHaveOpenPositionOrOrders
    #[error("PositionDoesntHaveOpenPositionOrOrders")]
    PositionDoesntHaveOpenPositionOrOrders = 0x17e2,
    /// 6115 - AllOrdersAreAlreadyLiquidations
    #[error("AllOrdersAreAlreadyLiquidations")]
    AllOrdersAreAlreadyLiquidations = 0x17e3,
    /// 6116 - CantCancelLiquidationOrder
    #[error("CantCancelLiquidationOrder")]
    CantCancelLiquidationOrder = 0x17e4,
    /// 6117 - UserIsBeingLiquidated
    #[error("UserIsBeingLiquidated")]
    UserIsBeingLiquidated = 0x17e5,
    /// 6118 - LiquidationsOngoing
    #[error("LiquidationsOngoing")]
    LiquidationsOngoing = 0x17e6,
    /// 6119 - WrongSpotBalanceType
    #[error("WrongSpotBalanceType")]
    WrongSpotBalanceType = 0x17e7,
    /// 6120 - UserCantLiquidateThemself
    #[error("UserCantLiquidateThemself")]
    UserCantLiquidateThemself = 0x17e8,
    /// 6121 - InvalidPerpPositionToLiquidate
    #[error("InvalidPerpPositionToLiquidate")]
    InvalidPerpPositionToLiquidate = 0x17e9,
    /// 6122 - InvalidBaseAssetAmountForLiquidatePerp
    #[error("InvalidBaseAssetAmountForLiquidatePerp")]
    InvalidBaseAssetAmountForLiquidatePerp = 0x17ea,
    /// 6123 - InvalidPositionLastFundingRate
    #[error("InvalidPositionLastFundingRate")]
    InvalidPositionLastFundingRate = 0x17eb,
    /// 6124 - InvalidPositionDelta
    #[error("InvalidPositionDelta")]
    InvalidPositionDelta = 0x17ec,
    /// 6125 - UserBankrupt
    #[error("UserBankrupt")]
    UserBankrupt = 0x17ed,
    /// 6126 - UserNotBankrupt
    #[error("UserNotBankrupt")]
    UserNotBankrupt = 0x17ee,
    /// 6127 - UserHasInvalidBorrow
    #[error("UserHasInvalidBorrow")]
    UserHasInvalidBorrow = 0x17ef,
    /// 6128 - DailyWithdrawLimit
    #[error("DailyWithdrawLimit")]
    DailyWithdrawLimit = 0x17f0,
    /// 6129 - DefaultError
    #[error("DefaultError")]
    DefaultError = 0x17f1,
    /// 6130 - Insufficient LP tokens
    #[error("Insufficient LP tokens")]
    InsufficientLPTokens = 0x17f2,
    /// 6131 - Cant LP with a market position
    #[error("Cant LP with a market position")]
    CantLPWithPerpPosition = 0x17f3,
    /// 6132 - Unable to burn LP tokens
    #[error("Unable to burn LP tokens")]
    UnableToBurnLPTokens = 0x17f4,
    /// 6133 - Trying to remove liqudity too fast after adding it
    #[error("Trying to remove liqudity too fast after adding it")]
    TryingToRemoveLiquidityTooFast = 0x17f5,
    /// 6134 - Invalid Spot Market Vault
    #[error("Invalid Spot Market Vault")]
    InvalidSpotMarketVault = 0x17f6,
    /// 6135 - Invalid Spot Market State
    #[error("Invalid Spot Market State")]
    InvalidSpotMarketState = 0x17f7,
    /// 6136 - InvalidSerumProgram
    #[error("InvalidSerumProgram")]
    InvalidSerumProgram = 0x17f8,
    /// 6137 - InvalidSerumMarket
    #[error("InvalidSerumMarket")]
    InvalidSerumMarket = 0x17f9,
    /// 6138 - InvalidSerumBids
    #[error("InvalidSerumBids")]
    InvalidSerumBids = 0x17fa,
    /// 6139 - InvalidSerumAsks
    #[error("InvalidSerumAsks")]
    InvalidSerumAsks = 0x17fb,
    /// 6140 - InvalidSerumOpenOrders
    #[error("InvalidSerumOpenOrders")]
    InvalidSerumOpenOrders = 0x17fc,
    /// 6141 - FailedSerumCPI
    #[error("FailedSerumCPI")]
    FailedSerumCPI = 0x17fd,
    /// 6142 - FailedToFillOnExternalMarket
    #[error("FailedToFillOnExternalMarket")]
    FailedToFillOnExternalMarket = 0x17fe,
    /// 6143 - InvalidFulfillmentConfig
    #[error("InvalidFulfillmentConfig")]
    InvalidFulfillmentConfig = 0x17ff,
    /// 6144 - InvalidFeeStructure
    #[error("InvalidFeeStructure")]
    InvalidFeeStructure = 0x1800,
    /// 6145 - Insufficient IF shares
    #[error("Insufficient IF shares")]
    InsufficientIFShares = 0x1801,
    /// 6146 - the Market has paused this action
    #[error("the Market has paused this action")]
    MarketActionPaused = 0x1802,
    /// 6147 - the Market status doesnt allow placing orders
    #[error("the Market status doesnt allow placing orders")]
    MarketPlaceOrderPaused = 0x1803,
    /// 6148 - the Market status doesnt allow filling orders
    #[error("the Market status doesnt allow filling orders")]
    MarketFillOrderPaused = 0x1804,
    /// 6149 - the Market status doesnt allow withdraws
    #[error("the Market status doesnt allow withdraws")]
    MarketWithdrawPaused = 0x1805,
    /// 6150 - Action violates the Protected Asset Tier rules
    #[error("Action violates the Protected Asset Tier rules")]
    ProtectedAssetTierViolation = 0x1806,
    /// 6151 - Action violates the Isolated Asset Tier rules
    #[error("Action violates the Isolated Asset Tier rules")]
    IsolatedAssetTierViolation = 0x1807,
    /// 6152 - User Cant Be Deleted
    #[error("User Cant Be Deleted")]
    UserCantBeDeleted = 0x1808,
    /// 6153 - Reduce Only Withdraw Increased Risk
    #[error("Reduce Only Withdraw Increased Risk")]
    ReduceOnlyWithdrawIncreasedRisk = 0x1809,
    /// 6154 - Max Open Interest
    #[error("Max Open Interest")]
    MaxOpenInterest = 0x180a,
    /// 6155 - Cant Resolve Perp Bankruptcy
    #[error("Cant Resolve Perp Bankruptcy")]
    CantResolvePerpBankruptcy = 0x180b,
    /// 6156 - Liquidation Doesnt Satisfy Limit Price
    #[error("Liquidation Doesnt Satisfy Limit Price")]
    LiquidationDoesntSatisfyLimitPrice = 0x180c,
    /// 6157 - Margin Trading Disabled
    #[error("Margin Trading Disabled")]
    MarginTradingDisabled = 0x180d,
    /// 6158 - Invalid Market Status to Settle Perp Pnl
    #[error("Invalid Market Status to Settle Perp Pnl")]
    InvalidMarketStatusToSettlePnl = 0x180e,
    /// 6159 - PerpMarketNotInSettlement
    #[error("PerpMarketNotInSettlement")]
    PerpMarketNotInSettlement = 0x180f,
    /// 6160 - PerpMarketNotInReduceOnly
    #[error("PerpMarketNotInReduceOnly")]
    PerpMarketNotInReduceOnly = 0x1810,
    /// 6161 - PerpMarketSettlementBufferNotReached
    #[error("PerpMarketSettlementBufferNotReached")]
    PerpMarketSettlementBufferNotReached = 0x1811,
    /// 6162 - PerpMarketSettlementUserHasOpenOrders
    #[error("PerpMarketSettlementUserHasOpenOrders")]
    PerpMarketSettlementUserHasOpenOrders = 0x1812,
    /// 6163 - PerpMarketSettlementUserHasActiveLP
    #[error("PerpMarketSettlementUserHasActiveLP")]
    PerpMarketSettlementUserHasActiveLP = 0x1813,
    /// 6164 - UnableToSettleExpiredUserPosition
    #[error("UnableToSettleExpiredUserPosition")]
    UnableToSettleExpiredUserPosition = 0x1814,
    /// 6165 - UnequalMarketIndexForSpotTransfer
    #[error("UnequalMarketIndexForSpotTransfer")]
    UnequalMarketIndexForSpotTransfer = 0x1815,
    /// 6166 - InvalidPerpPositionDetected
    #[error("InvalidPerpPositionDetected")]
    InvalidPerpPositionDetected = 0x1816,
    /// 6167 - InvalidSpotPositionDetected
    #[error("InvalidSpotPositionDetected")]
    InvalidSpotPositionDetected = 0x1817,
    /// 6168 - InvalidAmmDetected
    #[error("InvalidAmmDetected")]
    InvalidAmmDetected = 0x1818,
    /// 6169 - InvalidAmmForFillDetected
    #[error("InvalidAmmForFillDetected")]
    InvalidAmmForFillDetected = 0x1819,
    /// 6170 - InvalidAmmLimitPriceOverride
    #[error("InvalidAmmLimitPriceOverride")]
    InvalidAmmLimitPriceOverride = 0x181a,
    /// 6171 - InvalidOrderFillPrice
    #[error("InvalidOrderFillPrice")]
    InvalidOrderFillPrice = 0x181b,
    /// 6172 - SpotMarketBalanceInvariantViolated
    #[error("SpotMarketBalanceInvariantViolated")]
    SpotMarketBalanceInvariantViolated = 0x181c,
    /// 6173 - SpotMarketVaultInvariantViolated
    #[error("SpotMarketVaultInvariantViolated")]
    SpotMarketVaultInvariantViolated = 0x181d,
    /// 6174 - InvalidPDA
    #[error("InvalidPDA")]
    InvalidPDA = 0x181e,
    /// 6175 - InvalidPDASigner
    #[error("InvalidPDASigner")]
    InvalidPDASigner = 0x181f,
    /// 6176 - RevenueSettingsCannotSettleToIF
    #[error("RevenueSettingsCannotSettleToIF")]
    RevenueSettingsCannotSettleToIF = 0x1820,
    /// 6177 - NoRevenueToSettleToIF
    #[error("NoRevenueToSettleToIF")]
    NoRevenueToSettleToIF = 0x1821,
    /// 6178 - NoAmmPerpPnlDeficit
    #[error("NoAmmPerpPnlDeficit")]
    NoAmmPerpPnlDeficit = 0x1822,
    /// 6179 - SufficientPerpPnlPool
    #[error("SufficientPerpPnlPool")]
    SufficientPerpPnlPool = 0x1823,
    /// 6180 - InsufficientPerpPnlPool
    #[error("InsufficientPerpPnlPool")]
    InsufficientPerpPnlPool = 0x1824,
    /// 6181 - PerpPnlDeficitBelowThreshold
    #[error("PerpPnlDeficitBelowThreshold")]
    PerpPnlDeficitBelowThreshold = 0x1825,
    /// 6182 - MaxRevenueWithdrawPerPeriodReached
    #[error("MaxRevenueWithdrawPerPeriodReached")]
    MaxRevenueWithdrawPerPeriodReached = 0x1826,
    /// 6183 - InvalidSpotPositionDetected
    #[error("InvalidSpotPositionDetected")]
    MaxIFWithdrawReached = 0x1827,
    /// 6184 - NoIFWithdrawAvailable
    #[error("NoIFWithdrawAvailable")]
    NoIFWithdrawAvailable = 0x1828,
    /// 6185 - InvalidIFUnstake
    #[error("InvalidIFUnstake")]
    InvalidIFUnstake = 0x1829,
    /// 6186 - InvalidIFUnstakeSize
    #[error("InvalidIFUnstakeSize")]
    InvalidIFUnstakeSize = 0x182a,
    /// 6187 - InvalidIFUnstakeCancel
    #[error("InvalidIFUnstakeCancel")]
    InvalidIFUnstakeCancel = 0x182b,
    /// 6188 - InvalidIFForNewStakes
    #[error("InvalidIFForNewStakes")]
    InvalidIFForNewStakes = 0x182c,
    /// 6189 - InvalidIFRebase
    #[error("InvalidIFRebase")]
    InvalidIFRebase = 0x182d,
    /// 6190 - InvalidInsuranceUnstakeSize
    #[error("InvalidInsuranceUnstakeSize")]
    InvalidInsuranceUnstakeSize = 0x182e,
    /// 6191 - InvalidOrderLimitPrice
    #[error("InvalidOrderLimitPrice")]
    InvalidOrderLimitPrice = 0x182f,
    /// 6192 - InvalidIFDetected
    #[error("InvalidIFDetected")]
    InvalidIFDetected = 0x1830,
    /// 6193 - InvalidAmmMaxSpreadDetected
    #[error("InvalidAmmMaxSpreadDetected")]
    InvalidAmmMaxSpreadDetected = 0x1831,
    /// 6194 - InvalidConcentrationCoef
    #[error("InvalidConcentrationCoef")]
    InvalidConcentrationCoef = 0x1832,
    /// 6195 - InvalidSrmVault
    #[error("InvalidSrmVault")]
    InvalidSrmVault = 0x1833,
    /// 6196 - InvalidVaultOwner
    #[error("InvalidVaultOwner")]
    InvalidVaultOwner = 0x1834,
    /// 6197 - InvalidMarketStatusForFills
    #[error("InvalidMarketStatusForFills")]
    InvalidMarketStatusForFills = 0x1835,
    /// 6198 - IFWithdrawRequestInProgress
    #[error("IFWithdrawRequestInProgress")]
    IFWithdrawRequestInProgress = 0x1836,
    /// 6199 - NoIFWithdrawRequestInProgress
    #[error("NoIFWithdrawRequestInProgress")]
    NoIFWithdrawRequestInProgress = 0x1837,
    /// 6200 - IFWithdrawRequestTooSmall
    #[error("IFWithdrawRequestTooSmall")]
    IFWithdrawRequestTooSmall = 0x1838,
    /// 6201 - IncorrectSpotMarketAccountPassed
    #[error("IncorrectSpotMarketAccountPassed")]
    IncorrectSpotMarketAccountPassed = 0x1839,
    /// 6202 - BlockchainClockInconsistency
    #[error("BlockchainClockInconsistency")]
    BlockchainClockInconsistency = 0x183a,
    /// 6203 - InvalidIFSharesDetected
    #[error("InvalidIFSharesDetected")]
    InvalidIFSharesDetected = 0x183b,
    /// 6204 - NewLPSizeTooSmall
    #[error("NewLPSizeTooSmall")]
    NewLPSizeTooSmall = 0x183c,
    /// 6205 - MarketStatusInvalidForNewLP
    #[error("MarketStatusInvalidForNewLP")]
    MarketStatusInvalidForNewLP = 0x183d,
    /// 6206 - InvalidMarkTwapUpdateDetected
    #[error("InvalidMarkTwapUpdateDetected")]
    InvalidMarkTwapUpdateDetected = 0x183e,
    /// 6207 - MarketSettlementAttemptOnActiveMarket
    #[error("MarketSettlementAttemptOnActiveMarket")]
    MarketSettlementAttemptOnActiveMarket = 0x183f,
    /// 6208 - MarketSettlementRequiresSettledLP
    #[error("MarketSettlementRequiresSettledLP")]
    MarketSettlementRequiresSettledLP = 0x1840,
    /// 6209 - MarketSettlementAttemptTooEarly
    #[error("MarketSettlementAttemptTooEarly")]
    MarketSettlementAttemptTooEarly = 0x1841,
    /// 6210 - MarketSettlementTargetPriceInvalid
    #[error("MarketSettlementTargetPriceInvalid")]
    MarketSettlementTargetPriceInvalid = 0x1842,
    /// 6211 - UnsupportedSpotMarket
    #[error("UnsupportedSpotMarket")]
    UnsupportedSpotMarket = 0x1843,
    /// 6212 - SpotOrdersDisabled
    #[error("SpotOrdersDisabled")]
    SpotOrdersDisabled = 0x1844,
    /// 6213 - Market Being Initialized
    #[error("Market Being Initialized")]
    MarketBeingInitialized = 0x1845,
    /// 6214 - Invalid Sub Account Id
    #[error("Invalid Sub Account Id")]
    InvalidUserSubAccountId = 0x1846,
    /// 6215 - Invalid Trigger Order Condition
    #[error("Invalid Trigger Order Condition")]
    InvalidTriggerOrderCondition = 0x1847,
    /// 6216 - Invalid Spot Position
    #[error("Invalid Spot Position")]
    InvalidSpotPosition = 0x1848,
    /// 6217 - Cant transfer between same user account
    #[error("Cant transfer between same user account")]
    CantTransferBetweenSameUserAccount = 0x1849,
    /// 6218 - Invalid Perp Position
    #[error("Invalid Perp Position")]
    InvalidPerpPosition = 0x184a,
    /// 6219 - Unable To Get Limit Price
    #[error("Unable To Get Limit Price")]
    UnableToGetLimitPrice = 0x184b,
    /// 6220 - Invalid Liquidation
    #[error("Invalid Liquidation")]
    InvalidLiquidation = 0x184c,
    /// 6221 - Spot Fulfillment Config Disabled
    #[error("Spot Fulfillment Config Disabled")]
    SpotFulfillmentConfigDisabled = 0x184d,
    /// 6222 - Invalid Maker
    #[error("Invalid Maker")]
    InvalidMaker = 0x184e,
    /// 6223 - Failed Unwrap
    #[error("Failed Unwrap")]
    FailedUnwrap = 0x184f,
    /// 6224 - Max Number Of Users
    #[error("Max Number Of Users")]
    MaxNumberOfUsers = 0x1850,
    /// 6225 - InvalidOracleForSettlePnl
    #[error("InvalidOracleForSettlePnl")]
    InvalidOracleForSettlePnl = 0x1851,
    /// 6226 - MarginOrdersOpen
    #[error("MarginOrdersOpen")]
    MarginOrdersOpen = 0x1852,
    /// 6227 - TierViolationLiquidatingPerpPnl
    #[error("TierViolationLiquidatingPerpPnl")]
    TierViolationLiquidatingPerpPnl = 0x1853,
    /// 6228 - CouldNotLoadUserData
    #[error("CouldNotLoadUserData")]
    CouldNotLoadUserData = 0x1854,
    /// 6229 - UserWrongMutability
    #[error("UserWrongMutability")]
    UserWrongMutability = 0x1855,
    /// 6230 - InvalidUserAccount
    #[error("InvalidUserAccount")]
    InvalidUserAccount = 0x1856,
    /// 6231 - CouldNotLoadUserData
    #[error("CouldNotLoadUserData")]
    CouldNotLoadUserStatsData = 0x1857,
    /// 6232 - UserWrongMutability
    #[error("UserWrongMutability")]
    UserStatsWrongMutability = 0x1858,
    /// 6233 - InvalidUserAccount
    #[error("InvalidUserAccount")]
    InvalidUserStatsAccount = 0x1859,
    /// 6234 - UserNotFound
    #[error("UserNotFound")]
    UserNotFound = 0x185a,
    /// 6235 - UnableToLoadUserAccount
    #[error("UnableToLoadUserAccount")]
    UnableToLoadUserAccount = 0x185b,
    /// 6236 - UserStatsNotFound
    #[error("UserStatsNotFound")]
    UserStatsNotFound = 0x185c,
    /// 6237 - UnableToLoadUserStatsAccount
    #[error("UnableToLoadUserStatsAccount")]
    UnableToLoadUserStatsAccount = 0x185d,
    /// 6238 - User Not Inactive
    #[error("User Not Inactive")]
    UserNotInactive = 0x185e,
    /// 6239 - RevertFill
    #[error("RevertFill")]
    RevertFill = 0x185f,
    /// 6240 - Invalid MarketAccount for Deletion
    #[error("Invalid MarketAccount for Deletion")]
    InvalidMarketAccountforDeletion = 0x1860,
    /// 6241 - Invalid Spot Fulfillment Params
    #[error("Invalid Spot Fulfillment Params")]
    InvalidSpotFulfillmentParams = 0x1861,
    /// 6242 - Failed to Get Mint
    #[error("Failed to Get Mint")]
    FailedToGetMint = 0x1862,
    /// 6243 - FailedPhoenixCPI
    #[error("FailedPhoenixCPI")]
    FailedPhoenixCPI = 0x1863,
    /// 6244 - FailedToDeserializePhoenixMarket
    #[error("FailedToDeserializePhoenixMarket")]
    FailedToDeserializePhoenixMarket = 0x1864,
    /// 6245 - InvalidPricePrecision
    #[error("InvalidPricePrecision")]
    InvalidPricePrecision = 0x1865,
    /// 6246 - InvalidPhoenixProgram
    #[error("InvalidPhoenixProgram")]
    InvalidPhoenixProgram = 0x1866,
    /// 6247 - InvalidPhoenixMarket
    #[error("InvalidPhoenixMarket")]
    InvalidPhoenixMarket = 0x1867,
    /// 6248 - InvalidSwap
    #[error("InvalidSwap")]
    InvalidSwap = 0x1868,
    /// 6249 - SwapLimitPriceBreached
    #[error("SwapLimitPriceBreached")]
    SwapLimitPriceBreached = 0x1869,
    /// 6250 - SpotMarketReduceOnly
    #[error("SpotMarketReduceOnly")]
    SpotMarketReduceOnly = 0x186a,
    /// 6251 - FundingWasNotUpdated
    #[error("FundingWasNotUpdated")]
    FundingWasNotUpdated = 0x186b,
    /// 6252 - ImpossibleFill
    #[error("ImpossibleFill")]
    ImpossibleFill = 0x186c,
    /// 6253 - CantUpdatePerpBidAskTwap
    #[error("CantUpdatePerpBidAskTwap")]
    CantUpdatePerpBidAskTwap = 0x186d,
    /// 6254 - UserReduceOnly
    #[error("UserReduceOnly")]
    UserReduceOnly = 0x186e,
    /// 6255 - InvalidMarginCalculation
    #[error("InvalidMarginCalculation")]
    InvalidMarginCalculation = 0x186f,
    /// 6256 - CantPayUserInitFee
    #[error("CantPayUserInitFee")]
    CantPayUserInitFee = 0x1870,
    /// 6257 - CantReclaimRent
    #[error("CantReclaimRent")]
    CantReclaimRent = 0x1871,
    /// 6258 - InsuranceFundOperationPaused
    #[error("InsuranceFundOperationPaused")]
    InsuranceFundOperationPaused = 0x1872,
    /// 6259 - NoUnsettledPnl
    #[error("NoUnsettledPnl")]
    NoUnsettledPnl = 0x1873,
    /// 6260 - PnlPoolCantSettleUser
    #[error("PnlPoolCantSettleUser")]
    PnlPoolCantSettleUser = 0x1874,
    /// 6261 - OracleInvalid
    #[error("OracleInvalid")]
    OracleNonPositive = 0x1875,
    /// 6262 - OracleTooVolatile
    #[error("OracleTooVolatile")]
    OracleTooVolatile = 0x1876,
    /// 6263 - OracleTooUncertain
    #[error("OracleTooUncertain")]
    OracleTooUncertain = 0x1877,
    /// 6264 - OracleStaleForMargin
    #[error("OracleStaleForMargin")]
    OracleStaleForMargin = 0x1878,
    /// 6265 - OracleInsufficientDataPoints
    #[error("OracleInsufficientDataPoints")]
    OracleInsufficientDataPoints = 0x1879,
    /// 6266 - OracleStaleForAMM
    #[error("OracleStaleForAMM")]
    OracleStaleForAMM = 0x187a,
    /// 6267 - Unable to parse pull oracle message
    #[error("Unable to parse pull oracle message")]
    UnableToParsePullOracleMessage = 0x187b,
    /// 6268 - Can not borow more than max borrows
    #[error("Can not borow more than max borrows")]
    MaxBorrows = 0x187c,
    /// 6269 - Updates must be monotonically increasing
    #[error("Updates must be monotonically increasing")]
    OracleUpdatesNotMonotonic = 0x187d,
    /// 6270 - Trying to update price feed with the wrong feed id
    #[error("Trying to update price feed with the wrong feed id")]
    OraclePriceFeedMessageMismatch = 0x187e,
    /// 6271 - The message in the update must be a PriceFeedMessage
    #[error("The message in the update must be a PriceFeedMessage")]
    OracleUnsupportedMessageType = 0x187f,
    /// 6272 - Could not deserialize the message in the update
    #[error("Could not deserialize the message in the update")]
    OracleDeserializeMessageFailed = 0x1880,
    /// 6273 - Wrong guardian set owner in update price atomic
    #[error("Wrong guardian set owner in update price atomic")]
    OracleWrongGuardianSetOwner = 0x1881,
    /// 6274 - Oracle post update atomic price feed account must be drift program
    #[error("Oracle post update atomic price feed account must be drift program")]
    OracleWrongWriteAuthority = 0x1882,
    /// 6275 - Oracle vaa owner must be wormhole program
    #[error("Oracle vaa owner must be wormhole program")]
    OracleWrongVaaOwner = 0x1883,
    /// 6276 - Multi updates must have 2 or fewer accounts passed in remaining accounts
    #[error("Multi updates must have 2 or fewer accounts passed in remaining accounts")]
    OracleTooManyPriceAccountUpdates = 0x1884,
    /// 6277 - Don't have the same remaining accounts number and pyth updates left
    #[error("Don't have the same remaining accounts number and pyth updates left")]
    OracleMismatchedVaaAndPriceUpdates = 0x1885,
    /// 6278 - Remaining account passed does not match oracle update derived pda
    #[error("Remaining account passed does not match oracle update derived pda")]
    OracleBadRemainingAccountPublicKey = 0x1886,
    /// 6279 - FailedOpenbookV2CPI
    #[error("FailedOpenbookV2CPI")]
    FailedOpenbookV2CPI = 0x1887,
    /// 6280 - InvalidOpenbookV2Program
    #[error("InvalidOpenbookV2Program")]
    InvalidOpenbookV2Program = 0x1888,
    /// 6281 - InvalidOpenbookV2Market
    #[error("InvalidOpenbookV2Market")]
    InvalidOpenbookV2Market = 0x1889,
    /// 6282 - Non zero transfer fee
    #[error("Non zero transfer fee")]
    NonZeroTransferFee = 0x188a,
    /// 6283 - Liquidation order failed to fill
    #[error("Liquidation order failed to fill")]
    LiquidationOrderFailedToFill = 0x188b,
    /// 6284 - Invalid prediction market order
    #[error("Invalid prediction market order")]
    InvalidPredictionMarketOrder = 0x188c,
    /// 6285 - Ed25519 Ix must be before place and make SignedMsg order ix
    #[error("Ed25519 Ix must be before place and make SignedMsg order ix")]
    InvalidVerificationIxIndex = 0x188d,
    /// 6286 - SignedMsg message verificaiton failed
    #[error("SignedMsg message verificaiton failed")]
    SigVerificationFailed = 0x188e,
    /// 6287 - Market index mismatched b/w taker and maker SignedMsg order params
    #[error("Market index mismatched b/w taker and maker SignedMsg order params")]
    MismatchedSignedMsgOrderParamsMarketIndex = 0x188f,
    /// 6288 - Invalid SignedMsg order param
    #[error("Invalid SignedMsg order param")]
    InvalidSignedMsgOrderParam = 0x1890,
    /// 6289 - Place and take order success condition failed
    #[error("Place and take order success condition failed")]
    PlaceAndTakeOrderSuccessConditionFailed = 0x1891,
    /// 6290 - Invalid High Leverage Mode Config
    #[error("Invalid High Leverage Mode Config")]
    InvalidHighLeverageModeConfig = 0x1892,
    /// 6291 - Invalid RFQ User Account
    #[error("Invalid RFQ User Account")]
    InvalidRFQUserAccount = 0x1893,
    /// 6292 - RFQUserAccount should be mutable
    #[error("RFQUserAccount should be mutable")]
    RFQUserAccountWrongMutability = 0x1894,
    /// 6293 - RFQUserAccount has too many active RFQs
    #[error("RFQUserAccount has too many active RFQs")]
    RFQUserAccountFull = 0x1895,
    /// 6294 - RFQ order not filled as expected
    #[error("RFQ order not filled as expected")]
    RFQOrderNotFilled = 0x1896,
    /// 6295 - RFQ orders must be jit makers
    #[error("RFQ orders must be jit makers")]
    InvalidRFQOrder = 0x1897,
    /// 6296 - RFQ matches must be valid
    #[error("RFQ matches must be valid")]
    InvalidRFQMatch = 0x1898,
    /// 6297 - Invalid SignedMsg user account
    #[error("Invalid SignedMsg user account")]
    InvalidSignedMsgUserAccount = 0x1899,
    /// 6298 - SignedMsg account wrong mutability
    #[error("SignedMsg account wrong mutability")]
    SignedMsgUserAccountWrongMutability = 0x189a,
    /// 6299 - SignedMsgUserAccount has too many active orders
    #[error("SignedMsgUserAccount has too many active orders")]
    SignedMsgUserOrdersAccountFull = 0x189b,
    /// 6300 - Order with SignedMsg uuid does not exist
    #[error("Order with SignedMsg uuid does not exist")]
    SignedMsgOrderDoesNotExist = 0x189c,
    /// 6301 - SignedMsg order id cannot be 0s
    #[error("SignedMsg order id cannot be 0s")]
    InvalidSignedMsgOrderId = 0x189d,
    /// 6302 - Invalid pool id
    #[error("Invalid pool id")]
    InvalidPoolId = 0x189e,
    /// 6303 - Invalid Protected Maker Mode Config
    #[error("Invalid Protected Maker Mode Config")]
    InvalidProtectedMakerModeConfig = 0x189f,
    /// 6304 - Invalid pyth lazer storage owner
    #[error("Invalid pyth lazer storage owner")]
    InvalidPythLazerStorageOwner = 0x18a0,
    /// 6305 - Verification of pyth lazer message failed
    #[error("Verification of pyth lazer message failed")]
    UnverifiedPythLazerMessage = 0x18a1,
    /// 6306 - Invalid pyth lazer message
    #[error("Invalid pyth lazer message")]
    InvalidPythLazerMessage = 0x18a2,
    /// 6307 - Pyth lazer message does not correspond to correct fed id
    #[error("Pyth lazer message does not correspond to correct fed id")]
    PythLazerMessagePriceFeedMismatch = 0x18a3,
    /// 6308 - InvalidLiquidateSpotWithSwap
    #[error("InvalidLiquidateSpotWithSwap")]
    InvalidLiquidateSpotWithSwap = 0x18a4,
    /// 6309 - User in SignedMsg message does not match user in ix context
    #[error("User in SignedMsg message does not match user in ix context")]
    SignedMsgUserContextUserMismatch = 0x18a5,
    /// 6310 - User fuel overflow threshold not met
    #[error("User fuel overflow threshold not met")]
    UserFuelOverflowThresholdNotMet = 0x18a6,
    /// 6311 - FuelOverflow account not found
    #[error("FuelOverflow account not found")]
    FuelOverflowAccountNotFound = 0x18a7,
    /// 6312 - Invalid Transfer Perp Position
    #[error("Invalid Transfer Perp Position")]
    InvalidTransferPerpPosition = 0x18a8,
    /// 6313 - Invalid SignedMsgUserOrders resize
    #[error("Invalid SignedMsgUserOrders resize")]
    InvalidSignedMsgUserOrdersResize = 0x18a9,
}

impl solana_program::program_error::PrintProgramError for DriftError {
    fn print<E>(&self) {
        solana_program::msg!(&self.to_string());
    }
}

impl<T> solana_program::decode_error::DecodeError<T> for DriftError {
    fn type_of() -> &'static str { "DriftError" }
}
